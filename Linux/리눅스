useradd
-g : 기본 그룹으로 추가
-G : 보조 그룹으로 추가

/etc/suders.d/[그룹명] 으로 파일생성 후
%[그룹명] 	ALL=(ALL)		ALL
해당 그룹 멤버의 모든 사용자로 임의 명령을 실행할 수 있도록 관리 권한 구성

chage
-E : 계정 만료일 설정
-M : 계정 암호사용 최대일(~일마다 변경)
-d 0 : 로그인하자마자 암호 바꾸도록 설정

chmod
u+s : 파일의 소유자로 파일이 실행된다
g+s : 파일을 소유한 그룹 권한으로 실행.  디렉터리에 생성된 파일들의 그룹 소유자가 디렉터리와 동일함
o+t : 디렉터리에 대한 쓰기 권한이 있는 사용자가 자신이 소유한 파일만 제거할 수 있고. 다른 사용자가 소유한 파일을 제거하거나 강제저장 못함 

chown
-R : 현재 디렉터리와 그 아래에 있는 모든 것들의 소유권 변경

umask 숫자 : umask 변경
디렉터리 초반권한 0777
파일 초반권한        0775
umask  값 (root)  0022
umask  값 (user)  0002
파일/디렉터리 초반권한 - umask값 = 만들어질때 부여되는 권한값

ssh root 로그인 거부
/etc/ssh/sshd_config 에서 PermitRootLogin=yes로 변경 후
systemctl reload sshd 재시작

ssh 암호 없이 ssh키로만 접속 허용
PasswordAuthentication no로 변경
systemctl reload sshd 재시작

ssh-copy-id 사용자명@해당주소 : SSH 공개 키 전송

hostnamectl set-hostname 이름 : hostname 변경
cat /etc/host 에서 ip주소를 host주소로 변경 가능

tar
tar -cf ‘생성할파일이름’  ‘압축할 파일명’ : 압축파일 생성
-czf | gzip(.gz)
-cjf  | bzip2(.bz2)
-cJf  | xz(.xz)
#####z는 gz / j는 bz2 / J는 xz #####

tar -tf 압축파일명 : 내용 보기
tar -xvf 압축파일명 : 압축 해제(해당 경로에서)
압축방법에 따라 -z, j, f 옵션만 xvf앞에 붙여주면 된다.

sftp
명령어 앞에 l을 붙이면 로컬 환경에서 명령어 실행된다
get : 접속한 서버 → 로컬서버로 파일 다운받기
put : 로컬서버 → 접속한 서버로 파일 업로드

dnf
dnf config-manager —enable repo명 : repo명 활성화
dnf config-manager —add-repo=”링크주소” : 링크주소로 리포지토리 추가

mount
mount <파티션> <경로> : 해당 경로에 파티션을 마운트

find
find [경로] -name [파일명] : 경로에서 파일명 검색
find [경로] -uid 1000 
            -user developer
            -group developer
find [경로] -type d : 디렉터리 검색
            -type f : 파일 검색

mount(UUID사용해서)
lsblk -fp [경로] : UUID확인
mount UUID=”[UUID값]” [경로] : UUID값으로 마운트

crontab
-l : 현재 사용자의 작업 표시
-r : 현재 사용자의 모든 작업 제거
-e : 현재 사용자의 작업 편집

crontab 설정 순서
분 시 일 월 요일 명령
일(0), 월(1), ~ , 토(6)
*/n : n분, 시간마다 실행
9-16 : 오전 9시부터 4시까지 
#vi /etc/crontab에서 구문 참조

tuned(튜닝 프로파일 관리)
tuned-adm active : 현재 활성상태인 튜닝 프로파일 확인
tuned-adm list : 목록 확인 
tuned-adm profile [프로파일명] : 해당 프로파일로 변경
tuned-adm recommend : 권장된 프로파일로 설정

SELINUX
Enforcing(적용)
Permissive(허용)
Disabled(비활성화)
#vi /etc/selinux/config 에서  SELINUX=enforcing, permissive, disabled (부팅 시 영구적으로 적용)
setenforce 0 : Permissive
setenforce 1 : enforcing

ls -Z : 해당 파일의 SELinux 컨텍스트 표시
mv로 파일을 이동하면 원래 컨텍스트로 유지되고
cp로 파일을 복사하면 해당 디렉터리에 맞게 컨텍스트가 변경된다.
chcon -t [컨텍스트명] [경로] : 컨텍스트명 변경
chcon -t httpd_sys_content_t /virtual
restorecon -v /virtual : 컨텍스트 기본값으로 변경(default_t)

lsblk : 블럭 형태로 파티션 보기
gdisk [파티션경로] : 해당 파티션 나누는 과정 접속
n : 파티션 생성
p: 현재 파티션 상황 보기
w: 저장
c: 이름 변경
빠져나온 후 partprobe 필수

mkfs.xfs
mkfs.ext4 로 포맷
mount [파티션명] [연결할 경로]
- 오토마운트
#vi /etc/fstab
[장치명] [연결할 경로] [포맷유형] defaults 0 0
저장 후 재부팅

parted [장치명] mkpart [이름] [포맷명] [시작크기] [마지막크기]
■ 스왑 파티션은 포맷명이 linux-swap 이다
완료 후 udevadm settle
mkswap [장치명] : 스왑 공간 포맷

swapon -a 오류안나면 성공
swapon —show 로 전체보기
/etc/fstab에서 
`UUID=39e2667a-9458-42fe-9   swap   swap   defaults   0 0` 
swap 2개 있으면 스왑 오토마운트

- LVM(논리볼륨)만들기
pvcreate [장치명] : 물리 볼륨 레이블 지정
vgcreate [그룹명] [장치명] [장치명] : 그룹명으로 그룹 생성
vgextend [그룹명] [장치명] : 볼륨 그룹 확장
lvcreate -n [논리볼륨명] -L [크기] [그룹명]
lvextend -r -L [크기] [그룹명] : r붙이면 재포맷까지 해줌
              700M : 크기를 700M으로 설정 
             +300M : 현재 크기에 300M 더한다
mkfs.ext4 /dev/servera_group/LVM명 : 포맷
(-r옵션안될때)resize2fs /dev/servera_group/servera_volume : 논리볼륨 확장했을때 재포멧
vi /etc/fstab 마운트
