■ 일반 사용자에게 권한 부여 (보안문제로 root로그인은 가급적x)
1. IAM - users - adduser
2. 맨 아래 체크 해제 후 next permission - attach exisiting policies - Administrator Access 체크 후 next tag preview - create user
3. Dashboard 클릭 후 오른쪽에 url복사 후 로그인

■ VPC 생성(논리적으로 구성된 사용자 전용 네트워크)
1. VPC only
2. CIDR 10.0.0.0/16 
3. create vpc
4. Edit VPC setting - Enable DNS hostname 체크
5. VPC, Subnets 이름 따로 설정

■ GateWay 생성 후 연결
이름만 붙이고 create - 오른쪽 위 Attach to VPC - 연결할 vpc선택 후 attach  

■ subnet 생성
1. (이름 Public Subnet1) -  가용영역 첫번째(a) - IPv4 10.0.0.0/24
2. (이름 Private Subnet1) - 가용영역 첫번째(a) - IPv4 10.0.2.0/24 후 생성
3. Public Subnet1 선택 후 오른쪽 위 Edit subnet settings - Enable auto-assign public IPv4 address 체크

■ 라우팅 테이블 추가
1. (이름 Public Routing) - VPC 선택 - create route table
2. 처음에 생성된 라우터는 Private이므로 오른쪽 아래에 Edit route로 들어가서 Addroute - 목적지 default gateway 추가(0.0.0.0/0) - Target internet-gateway - 저장
3. 여기까지 했으면 아직 할당된 서브넷이 없다. Subnet associations 클릭 - ****Explicit subnet associations 오른쪽 Edit ~ - Public Subnet1 클릭 후 저장**** 
4. Private Subnet이면 Private을 추가하면 되고, 서브넷을 추가했을때도 여기서 설정한다.
##기본 라우팅 테이블은 안 건드리는게 좋음##
##Route tables에 Main부분이 Yes라면 기본으로 만들어진 테이블 / No면 내가 만든 테이블##

■ VPC 보안 그룹 생성
1. VPC대시보드 Security하위에서 Security Group 선택
2. Create security group
3. 이름이랑 설명 작성 하고 vpc설정 후 Add rule
4. 허용할 유형 선택
5. 웹이라면 Source는 Anywhere-IPv4(모든 요청 허용)

■ 인스턴스 시작
1. EC2 대시보드 하위에 Instance - Launch Instance 선택
2. 이름 정하고 Ubuntu리눅스(버전 18.04)
3. create new keypair 클릭 후 이름 정하고 create(pem파일 복사)
4. Network Setting - Edit
    1.  vpc : testVPC
    2. Subnet : Public
    3. Auto-assign public IP : enable (IP자동할당받기)
    4. Firewall - 새로 만들면 add securty group rule
        type : SSH/HTTP, source type : Anywhere/Anywhere - advanced details
    5. 이미 있으면 select existing ~ 선택 후 적어둔 그룹 선택
6. 맨 아래에 User data - 아래 링크 클릭 후 [web instance user data] 복사하고 User data에 붙여넣기 - launch instances

■ NAT인스턴스 추가(게이트웨이는 돈나감) DB인스턴스 다운받을때 사용
1. EC2 대시보드 - launch instance 
    1. 이름 : NAT Server
    2. OS : Ubuntu 18.04
    3. keypair - testkey
    4. Network Edit - VPC: testVPC, Public subnet1
    5. security group type: SSH, Custom TCP
    6. TCP부분 port range 0-1023, source 10.0.0.0/16
2. Custom UDP 추가 후 위에랑 똑같이
3. All ICMPv4 추가 후 Source 10.0.0.0/16
4. Userdata 부분에 [NAT Instance user data](https://s3.ap-northeast-2.amazonaws.com/class.kukuboor.com/NAT+Instance+User+Data(Ubuntu).txt) 복붙
5. 만든 후 실행되면 인스턴스 체크 후 오른쪽 위 Actions - Networking - Change source/destination check(네트워크 변경되면 자동으로 차단) Stop으로
6. VPC - Route tables -create route table - 이름 Private Routing, VPC: testVPC - 생성
7. Edit route수정 - add 후 0.0.0.0/0 Instance 추가(NAT-server)
8. subnet ossociations - Edit subnet - Private Subnet 1 선택 후 저장

■ DB
launch instance - 이름: DB server - 우분투18 - keypair testkey - Network Edit - testVPC, Private Subnet
- 방화벽 create(이름: DB-SG) - 규칙 추가 후 MySQL/Aurora, Source 10.0.0.0/16 - [DB Instance User Data] 내용 복사 후 userdata 부분에 붙여넣기

■ WEB서버에 DB등록
1. putty로 web서버 접속
2. cd /var/www/html/basic/login/dbconn.php 들어가서
3. mysql_hostname 부분을 DB사설주소로 변경
이 작업은 네트워크 설정 후에 해야한다.

■ ALB 생성
1. EC2 - Load Balancers - create(Application Load Balancer)
    1. 이름 : Web-Application-ELB
    2. VPC : 만들어둔 VPC
    3. Mapping 전부 체크(Subnet도 Public으로)
    4. Security group 아래 Create new ~ 클릭
    5. 이름 적고 VPC설정
    6. Add rule(HTTP, Anywhere-IPv4)
2. 만든 그룹 불러오기(default는 삭제)
3. Listners and routing에서 Create target group
    1. instance - 이름: lab-app-target-group
    2. Health checks - Advanced health ~ 확장
    3. 2, 5, 30, 40(H U T I) 변경 후 Next
    4. 만들어진 인스턴스 선택 후 Include as ~ 
    5. Create target group
4. 새로고침 후 만든 그룹 선택
5. create load balancer , view load balanver
6. 만들어진 elb선택 active확인, DNS복사 후 접속확인

■ 시작 템플릿 생성
1. EC2 - Launch Templates(instances) - Create launch
    1. 이름 : lab-app-launch-template
    2. Provide~ 앞에 체크
2. Application and OS -required부분에서 Browe more AMIs 선택
    1. 첫번째 SSD 64bit확인 후 select
3. Instance type - t3.micro
4. key pair - Don’t include ~
5. Network setting - Web Security 그룹 선택
6. Advanced details - IAM instance profile - EmployeeDire~
7. User data 적고 Create
